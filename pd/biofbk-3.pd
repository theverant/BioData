#N canvas 372 25 2063 1226 12;
#X declare -lib Gem;
#X declare -path else;
#X obj 30 -88 declare -lib Gem;
#X obj 227 445 gemhead;
#X floatatom 339 1164 5 0 0 0 - - - 0;
#X floatatom 384 1163 5 0 0 0 - - - 0;
#X floatatom 431 1164 5 0 0 0 - - - 0;
#X msg 295 -324 create;
#X obj 361 -256 gemwin;
#X msg 424 -338 1;
#X msg 459 -336 0;
#X obj 249 968 pix_multiimage;
#X floatatom 346 933 5 0 0 0 - - - 0;
#X obj 321 1289 pix_texture;
#X obj 321 1217 rotateXYZ;
#X floatatom 1396 1742 5 0 0 0 - - - 0;
#X obj 1398 1620 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1396 1717 / 100;
#X floatatom 1485 1742 5 0 0 0 - - - 0;
#X obj 1485 1718 / 100;
#X floatatom 1309 1742 5 0 0 0 - - - 0;
#X obj 1310 1716 / 100;
#X obj 1395 1659 metro 100 10 msec;
#X msg 1490 1603 tempo \$1 msec;
#X obj 1458 1566 hsl 162 19 0 127 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 1303 1885 s x;
#X obj 1394 1883 s y;
#X obj 1484 1889 s z;
#X obj 1306 1800 *;
#X obj 339 1132 r x;
#X obj 1396 1799 *;
#X obj 384 1130 r y;
#X obj 431 1132 r z;
#X obj 1482 1796 *;
#X obj 1304 1860 line 0 1000;
#X msg 1304 1831 \$1 1000;
#X obj 1396 1857 line 0 1000;
#X msg 1396 1829 \$1 1000;
#X obj 1489 1858 line 0 1000;
#X msg 1489 1829 \$1 1000;
#X obj 664 -261 netreceive -u -b;
#X obj 666 -186 oscparse;
#X obj 473 169 print;
#X obj 670 -96 list trim;
#X obj 672 -3 route blink;
#X obj 416 68 +;
#X obj 468 70 int;
#X msg 289 446 open ../images/planets*.jpg 12;
#X obj 453 123 mod 13;
#X obj 806 171 route respiration;
#X obj 573 -395 loadbang;
#X obj 964 207 route heart;
#X obj 1079 259 route skin;
#X obj 966 252 s heart;
#X obj 1366 1493 loadbang;
#X obj 805 209 s respiration;
#X obj 1079 306 s skin;
#X obj 266 400 loadbang;
#X obj 465 1431 r respiration;
#X obj 326 1819 sphere;
#X obj 1309 1692 random 10;
#X obj 1396 1692 random 10;
#X obj 1485 1693 random 10;
#X obj 344 1687 r heart;
#X floatatom 346 1779 5 0 0 0 - - - 0;
#X obj 73 287 translateXYZ;
#X obj 323 1621 colorRGB 1 1 1 1;
#X floatatom 369 1397 5 0 0 0 - - - 0;
#X obj 368 1369 r skin;
#X floatatom 463 1456 5 0 0 0 - - - 0;
#X obj 350 1538 *;
#X obj 463 1494 * 1;
#X obj 37 -149 declare -path else;
#X obj 345 1739 * 3;
#X floatatom 1323 373 6 0 0 0 - - - 0;
#X floatatom 1544 473 7 0 0 0 - - - 0;
#X floatatom 1643 518 7 0 0 0 - - - 0;
#X floatatom 1725 558 5 0 0 0 - - - 0;
#X obj 1324 417 s delta;
#X obj 1540 514 s theta;
#X obj 1639 550 s alpha;
#X obj 1724 593 s beta;
#X msg 1477 1530 80;
#X msg 661 -348 listen 12345;
#X obj 1263 293 list split 3;
#X obj 1329 332 list split 1;
#X obj 1543 436 list split 1;
#X obj 1645 483 list split 1;
#X obj 1726 529 list split 1;
#X floatatom 1795 598 5 0 0 0 - - - 0;
#X obj 1796 569 list split 1;
#X obj 1794 633 s gamma;
#X obj 1005 500 t b f;
#X floatatom 1017 631 5 0 0 0 - - - 0;
#X obj 934 689 +;
#X obj 986 689 int;
#X obj 936 749 mod 13;
#X floatatom 934 783 5 0 0 0 - - - 0;
#X obj 1341 937 sel 1 0;
#X obj 1325 988 t b b;
#X msg 1396 990 1;
#X obj 1346 1062 spigot 1;
#X msg 1324 1013 0;
#X floatatom 1346 1099 5 0 0 0 - - - 0;
#X obj 1466 745 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 1011 561 expr if ($f2 >= 5 \, 1 \, 0);
#X text 805 241 s = send;
#X text 341 1105 r = receive;
#X text 766 262 send respiration;
#X text 938 284 send heart;
#X text 1077 334 send skin;
#X text 1259 232 From here on down \, these are the brain waves;
#X text 38 309 are these the xyz that are controlling the rotation in the gemwindow? or are they the xyz in the tempo patch? where are the xyz coming from?;
#X text 515 1507 The *1 object under respiration must control opacity?;
#X text 1058 486 trigger bang float;
#X text 1184 987 trigger bang bang;
#X text 453 1611 manipulation object: colorRGB 1 = gemlist \, 2 = red \, 3 = green \, 4 = blue \, 5 = alpha;
#X text 325 468 Library of images: Is it only drawing from one single library? What if I want it to draw from two different libraries? i.e. mixing the body and the planets. Is there a way for the sensors to manipulate the blending of two images?;
#X text 95 1522 What is this * object doing on the second inlet? Is it for scaling?;
#X text 569 1426 recieve respiration - on the hot inlet;
#X text 415 1284 pix object: apply texture mapping uses the image as a texture on a geo 1 = gemlist \, and other messages;
#X text 1436 1056 controls the stream of messages. zero on the right stops messages on the left non-zero on the right \, turns the spigot on.;
#X text 1463 767 uh oh... where did this come from? I must have missed it when moving something.;
#X text 404 1686 receive heart on hot inlet;
#X text 380 1812 geometric object: renders a sphere Inlet 1 = gemlist \, message: draw (line \, fill \, point) Inlet 2 = float: size Inlet 3: int: number of segments;
#X text 380 1735 Heart value x 3 enters 2nd inlet to affect the size of the sphere.;
#X text 643 -399 starts patch running on start up.;
#X text 30 -66 I'm assuming this indicates the image library?;
#X text 34 -126 what is path else?;
#X text 338 398 starts path running on start up;
#X text 85 444 connects objects to the gem window;
#X text 360 637 this float comes from the delta waves It is the only thing from EEG. It must the the eyes blinking that selects the image?;
#X text 773 -354 I'm guessing that "listen" tells it to detect the sensors... but why 12345?;
#X text 733 -185;
#X text 793 -262 recieve from network: what is -u and -b;
#X text 755 -108 what list is being trimmed? I don't see a list upstream from the list trim object.;
#X text 1023 583 I assume this formula is selecting the bandwidth?;
#X text 32 -326 creates the gemwindow for the image;
#X text 198 -233 gemwindow where images appear;
#X text 446 -302 Why the 1 and 0?;
#X text 445 -286 Is it on and off?;
#X text 310 -3 I'm unclear on the path below the left outlet.;
#X text 334 68 counter:;
#X text 503 71 where is the integer from?;
#X text 128 187 print: sends information to the console for debugging.;
#X text 508 112 mod: outputs remainder;
#X text 505 127 but what is being divided?;
#X text 808 148 Route = checks for argument and fetches corresponding data;
#X text 1470 308 Is this related to Listen 12345?;
#X text 781 -315 Is this listening for the 5 bandwidths from the EEG?;
#X text 755 -69 Is it the 12345 list of data streams from the EEG from the Listen object above?;
#X text 1365 289 Why is it list split 3 \, when there are 5 bands?;
#X text 1312 441 sending delta waves;
#X text 1521 386 Nothing is currently receiving theta \, alpha \, beta or gamma waves.;
#X text 1058 502 Is the float the direct value from the Delta Waves?;
#X text 842 410 I assume this part below is detecting eyes blinking;
#X text 864 690 counter:;
#X text 762 739 mod: outputs remainder;
#X text 735 754 but what is being divided?;
#X text 1350 904 I don't understand what is happening below \, or why.;
#X text 1346 1134 what is this integer being used for? Does it go anywhere?;
#X text 1438 1463 What is this patch for? Is it related to the sensors and image manipulation? Or is it for the sound generator that was here before;
#X text 762 0 What is the blink? Is this referring to eyes blinking with the EEG? or is it a specific function?;
#X text 1024 602 Or determining if the frequency indicates eyes blinking?;
#X text 601 881 are images cycled through randomly from the library? Or do they go in a sequential order by file name? or are they selected based on relationship to the integer?;
#X text 751 845 resulting integer changes the image;
#X text 280 996 pix source: pix loads multiple image files.;
#X text 283 1015 Inlet 1 = gemlist \, file \; inlet 2 = select image from integer;
#X text 466 1127 where are x \, y \, and z being received from? It looks like they control the rotation of the sphere;
#X text 419 1362 receive skin on the cold inlet that controls red vs cyan;
#X text 461 1539 If respiration controls opacity \, why is using the green and blue inlets instead of the alpha inlet?;
#X text 746 -195 This takes the OSC packets and converts them into PD messages. OSC is sound control... why are the sensors sending data in OSC instead of binary? Wouldn't binary slip packets have less latency and be more reactive in real time?;
#X text 988 708 where does this integer come from?;
#X text 1312 459 I don't see r delta anywhere.;
#X text 496 1169 are the xyz values random? or are they related to a sensor?;
#X text 496 1187 I want all image manipulations to be controlled by sensors.;
#X text 519 1461 It appears that both skin and respiration are controlling colour on the RGB inlets.;
#X connect 1 0 9 0;
#X connect 2 0 12 1;
#X connect 3 0 12 2;
#X connect 4 0 12 3;
#X connect 5 0 6 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 9 0 12 0;
#X connect 10 0 9 1;
#X connect 11 0 64 0;
#X connect 12 0 11 0;
#X connect 13 0 28 1;
#X connect 14 0 20 0;
#X connect 15 0 13 0;
#X connect 16 0 31 1;
#X connect 17 0 16 0;
#X connect 18 0 26 0;
#X connect 19 0 18 0;
#X connect 20 0 58 0;
#X connect 20 0 59 0;
#X connect 20 0 60 0;
#X connect 21 0 20 0;
#X connect 22 0 21 0;
#X connect 22 0 33 0;
#X connect 22 0 35 0;
#X connect 22 0 37 0;
#X connect 26 0 33 0;
#X connect 27 0 2 0;
#X connect 28 0 35 0;
#X connect 29 0 3 0;
#X connect 30 0 4 0;
#X connect 31 0 37 0;
#X connect 32 0 23 0;
#X connect 33 0 32 0;
#X connect 34 0 24 0;
#X connect 35 0 34 0;
#X connect 36 0 25 0;
#X connect 37 0 36 0;
#X connect 38 0 39 0;
#X connect 39 0 41 0;
#X connect 41 0 42 0;
#X connect 42 0 43 0;
#X connect 42 1 47 0;
#X connect 43 0 44 0;
#X connect 44 0 43 1;
#X connect 44 0 46 0;
#X connect 45 0 9 0;
#X connect 46 0 40 0;
#X connect 47 0 53 0;
#X connect 47 1 49 0;
#X connect 48 0 81 0;
#X connect 48 0 5 0;
#X connect 48 0 7 0;
#X connect 49 0 51 0;
#X connect 49 1 50 0;
#X connect 50 0 54 0;
#X connect 50 1 82 0;
#X connect 52 0 14 0;
#X connect 52 0 80 0;
#X connect 55 0 45 0;
#X connect 55 0 1 0;
#X connect 56 0 67 0;
#X connect 58 0 19 0;
#X connect 58 0 28 0;
#X connect 59 0 15 0;
#X connect 59 0 31 0;
#X connect 60 0 17 0;
#X connect 60 0 26 1;
#X connect 61 0 71 0;
#X connect 62 0 57 1;
#X connect 64 0 57 0;
#X connect 65 0 68 1;
#X connect 66 0 65 0;
#X connect 67 0 68 0;
#X connect 67 0 69 0;
#X connect 68 0 64 1;
#X connect 69 0 64 2;
#X connect 69 0 64 3;
#X connect 71 0 62 0;
#X connect 72 0 76 0;
#X connect 72 0 90 0;
#X connect 73 0 77 0;
#X connect 74 0 78 0;
#X connect 75 0 79 0;
#X connect 80 0 22 0;
#X connect 81 0 38 0;
#X connect 82 1 83 0;
#X connect 83 0 72 0;
#X connect 83 1 84 0;
#X connect 84 0 73 0;
#X connect 84 1 85 0;
#X connect 85 0 74 0;
#X connect 85 1 86 0;
#X connect 86 0 75 0;
#X connect 86 1 88 0;
#X connect 87 0 89 0;
#X connect 88 0 87 0;
#X connect 90 0 103 0;
#X connect 90 1 103 1;
#X connect 91 0 96 0;
#X connect 91 0 92 0;
#X connect 92 0 93 0;
#X connect 93 0 92 1;
#X connect 93 0 94 0;
#X connect 94 0 95 0;
#X connect 95 0 10 0;
#X connect 96 0 97 0;
#X connect 96 1 98 0;
#X connect 97 0 100 0;
#X connect 97 1 99 0;
#X connect 98 0 99 1;
#X connect 99 0 101 0;
#X connect 100 0 99 1;
#X connect 103 0 91 0;
